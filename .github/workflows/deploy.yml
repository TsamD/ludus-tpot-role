name: Deploy Range Config

on:
  push:
    paths:
      - 'ludus-range-config.yml'
  workflow_dispatch:

jobs:
  deploy_range:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    permissions:
      contents: write
    env:
      LUDUS_API_KEY: ${{ secrets.LUDUS_API_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Validate and Format YAML Config
        run: |
          echo "Validating YAML syntax (initial run)..."
          yamllint ludus-range-config.yml || true

          echo "Removing trailing whitespace..."
          sed -i 's/[[:space:]]*$//' ludus-range-config.yml

          echo "Installing latest yq for YAML reformatting..."
          wget https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

          echo "Reformatting YAML file using yq..."
          yq eval . -i ludus-range-config.yml

          echo "Inserting blank lines between list items..."
          awk 'NR==1 {print} NR > 1 {if ($0 ~ /^  -/) {print ""} print}' ludus-range-config.yml > temp.yml && mv temp.yml ludus-range-config.yml

          echo "Re-validating YAML syntax with custom configuration..."
          yamllint --config-data "{extends: default, rules: {document-start: disable, trailing-spaces: disable, line-length: {max: 120, level: warning}}}" ludus-range-config.yml

      - name: Install WireGuard & jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wireguard jq

      - name: Write WireGuard Config
        shell: bash
        env:
          WIREGUARD_CONFIG: ${{ secrets.WIREGUARD_CONFIG }}
        run: |
          echo "$WIREGUARD_CONFIG" | base64 --decode > wg0.conf
          chmod 600 wg0.conf

      - name: Activate WireGuard VPN
        run: sudo wg-quick up ./wg0.conf

      - name: Install Ludus CLI Non-Interactively
        run: |
          set -e
          if ! command -v script >/dev/null; then
            echo "Error: 'script' command not found. Aborting."
            exit 1
          fi
          script -q -c 'printf "y\ny\ny\n" | curl -s https://ludus.cloud/install | bash' /dev/null
          echo "$HOME/.ludus/bin" >> $GITHUB_PATH

      - name: Validate Ludus API Key
        run: |
          set -e
          if [ -z "$LUDUS_API_KEY" ]; then
            echo "Error: LUDUS_API_KEY is not set!"
            exit 1
          fi
          echo "LUDUS_API_KEY is set. Ludus CLI can now use it."

      - name: Deploy to Ludus
        run: |
          ~/.ludus/bin/ludus deploy \
            --range-config ./ludus-range-config.yml \
            --api-key "$LUDUS_API_KEY"
